#################################################
# Project cim
#################################################
---
- hosts: cim
  become: yes
  vars_files:
    - group_vars/baremetal_hosts

  tasks:
    # - name: Create a symbolic link
    #   file:
    #     src: /vagrant_data/cim-dev
    #     dest: /var/www/html/cim-dev
    #     owner: vagrant
    #     group: vagrant
    #     state: link
    #   tags: apache_link
    #   register: out

    # - debug: var=out.stdout_lines
    #   tags: [apache_link,build]

    - name: Composer install.
      command: composer install
      register: out
      tags: build
      args:
        chdir: /var/www/html/cim-dev

    - debug: var=out.stdout_lines
      tags: build

    # - name: Delete database with name 'cim'
    #   mysql_db:
    #     name: cim
    #     state: absent
    #   register: out
    #   tags: [db]

    # - debug: var=out.stdout_lines
    #   tags: [db]

    # - name: Create database with name 'cim'
    #   mysql_db:
    #     name: cim
    #     collation: utf8mb4_unicode_ci
    #     state: present
    #   register: out
    #   tags: [db]

    # - debug: var=out.stdout_lines
    #   tags: [db]

    # php -r "readfile('https://getcomposer.org/installer');" | php

    - name: build-platform.
      shell: "./toolkit/phing build-platform"
      ignore_errors: true
      register: out
      args:
        chdir: /var/www/html/cim-dev
      tags: build

    - debug: var=out.stdout_lines
      tags: build

    - name: build-subsite-dev.
      shell: "./toolkit/phing build-subsite-dev"
      ignore_errors: true
      register: out
      args:
        chdir: /var/www/html/cim-dev
      tags: build

    - debug: var=out.stdout_lines
      tags: build

    # - name: Create tmp folder
    #   file:
    #     path: /var/www/html/cim-dev/build/sites/default/tmp
    #     state: directory
    #   register: out
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    - name: install-clone.
      shell: "./toolkit/phing install-clone"
      ignore_errors: true
      register: out
      args:
        chdir: /var/www/html/cim-dev
      tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: generate settings.
    #   shell: /vagrant_data/cim-dev/vendor/ec-europa/toolkit/bin/drush @none --nocolor --root="/vagrant_data/cim-dev/build" php-script /vagrant_data/cim-dev/.tmp/generate-settings.php
    #   ignore_errors: true
    #   register: out
    #   args:
    #     chdir: /var/www/html/cim-dev
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

# @TODO: import latest database, rename it to cim-prod-sanitized.sql

    # - name: Import cim-prod-sanitized.sql similar to mysql -u <username> -p <password> < cim-prod-sanitized.sql
    #   mysql_db:
    #     state: import
    #     name: cim
    #     target: /vagrant_data/cim-prod-sanitized.sql
    #   register: out
    #   tags: [db]

    # - debug: var=out.stdout_lines
    #   tags: [db]


# Possible commands sequence, once added 
# git clone
# checkout master
# Once added build.develop.props with database credentials:
# composer update
# ./toolkit/phing build-platform
# ./toolkit/phing build-subsite-dev
## At this point, phing drush-generate-settings fails with:
## [drush] Executing command: /vagrant_data/cim-dev/vendor/ec-europa/toolkit/bin/drush @default --nocolor --root="/vagrant_data/cim-dev/build" php-script /vagrant_data/cim-dev/.tmp/generate-settings.php
##  [error] Could not find the alias @default
# Then I run:
# /vagrant_data/cim-dev/vendor/ec-europa/toolkit/bin/drush @none --nocolor --root="/vagrant_data/cim-dev/build" php-script /vagrant_data/cim-dev/.tmp/generate-settings.php
# Imported the databse
# drush rr; drush cc all
# Project works just fine. Drupal core version is 7.73 already!
# Now, if I try the same with the change in build.develop.prop, this is what I get on build-platform step:
#The Drush launcher could not find a Drupal site to operate on. Please do *one* of the following:
#  - Navigate to any where within your Drupal project and try again.
#  - Add --root=/path/to/drupal so Drush knows where your site is located.
#[phingcall] /vagrant_data/cim-dev/vendor/ec-europa/toolkit/includes/phing/build/main/project.xml:170:41: Task exited with code 1

#BUILD FAILED
#/vagrant_data/cim-dev/vendor/ec-europa/toolkit/includes/phing/build/main/project.xml:9:10: /vagrant_data/cim-dev/vendor/ec-europa/toolkit/includes/phing/build/main/project.xml:16:57: Execution of the target buildfile failed. Aborting.

#Total time: 7.5048 seconds

# Trying to install with new props:
# './toolkit/phing build-subsite-dev' instead of './toolkit/phing build-platform'





    # - name: Remove __temp_drush_make if present
    #   file:
    #     path: /var/www/html/emnies-dev/__temp_drush_make
    #     state: absent
    #   register: out
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Remove docroot if present
    #   file:
    #     path: /var/www/html/emnies-dev/docroot
    #     state: absent
    #   register: out
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build


    # - name: Build in temporary folder
    #   command: ./bin/drush make --cache-duration-releasexml=300 --concurrency=8 irma.make.yml __temp_drush_make
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/emnies-dev

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Fix wrong profile placement
    #   command: mv __temp_drush_make/profiles/contrib/openatrium __temp_drush_make/profiles/openatrium
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/emnies-dev

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Remove docroot if present
    #   file:
    #     path: __temp_drush_make/profiles/contrib
    #     state: absent
    #   register: out
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Fix wrong profile placement
    #   command: rsync -r --update __temp_drush_make/ docroot/
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/emnies-dev

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Remove __temp_drush_make
    #   file:
    #     path: /var/www/html/emnies-dev/__temp_drush_make
    #     state: absent
    #   register: out
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create a symbolic link for modules
    #   file:
    #     src: /var/www/html/emnies-dev/modules
    #     dest: /var/www/html/emnies-dev/docroot/sites/default/modules
    #     state: link
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create a symbolic link for themes
    #   file:
    #     src: /var/www/html/emnies-dev/themes
    #     dest: /var/www/html/emnies-dev/docroot/sites/default/themes
    #     state: link
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create a symbolic link for settings.php
    #   file:
    #     src: /var/www/html/emnies-dev/shared/settings.php
    #     dest: /var/www/html/emnies-dev/docroot/sites/default/settings.php
    #     state: link
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create files folder in shared if needed
    #   file:
    #     path: /var/www/html/emnies-dev/shared/files
    #     state: directory
    #   register: out
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create a symbolic link for files folder
    #   file:
    #     src: /var/www/html/emnies-dev/shared/files
    #     dest: /var/www/html/emnies-dev/docroot/sites/default/files
    #     state: link
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Set permissions for files folder
    #   command: chmod -R 0777 files
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/emnies-dev/shared

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create private folder in shared if needed
    #   file:
    #     path: /var/www/html/emnies-dev/shared/private
    #     state: directory
    #   register: out
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create a symbolic link for private folder
    #   file:
    #     src: /var/www/html/emnies-dev/shared/private
    #     dest: /var/www/html/emnies-dev/docroot/sites/default/private
    #     state: link
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Set permissions for private folder
    #   command: chmod -R 0777 private
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/emnies-dev/shared

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create a symbolic link for local settings
    #   file:
    #     src: /vagrant_data/assets/settings.local.php
    #     dest: /var/www/html/emnies-dev/docroot/sites/default/settings.local.php
    #     state: link
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create project tmp folder in vagrant user.
    #   file:
    #     path: /home/vagrant/emnies/tmp
    #     state: directory
    #   register: out
    #   tags: mkdir

    # - name: Delete database with name 'ami'
    #   mysql_db:
    #     name: ami
    #     state: absent
    #   register: out
    #   tags: [db]

    # - debug: var=out.stdout_lines
    #   tags: [db]

    # - name: Create database with name 'ami'
    #   mysql_db:
    #     name: ami
    #     collation: utf8mb4_unicode_ci
    #     state: present
    #   register: out
    #   tags: [db]

    # - debug: var=out.stdout_lines
    #   tags: [db]

    # # @TODO: if project came from git:
    # # @TODO: get patch at https://www.drupal.org/project/drupal/issues/3031631 , put in /vagrant_data/patches and apply to includes/forms.inc

    # - name: Patch includes/form.inc
    #   shell: "patch < /vagrant_data/patches/3031631-2.patch"
    #   ignore_errors: true
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot/includes
    #   tags: patch

    # - debug: var=out.stdout_lines
    #   tags: patch

    # # # @TODO: if a database is not available:
    # # # @TODO: Get sanitized database from DIGIT and extract it at /vagrant_data if not available
 
    # - name: Import sanitized_daily_ami_production_db.sql similar to mysql -u <username> -p <password> < sanitized_daily_ami_production_db.sql
    #   mysql_db:
    #     state: import
    #     name: ami
    #     target: /vagrant_data/sanitized_daily_ami_production_db.sql
    #   register: out
    #   tags: [db]

    # - debug: var=out.stdout_lines
    #   tags: [db]

    # - name: TRUNCATE TABLE cache
    #   command: ./../vendor/drush/drush/drush -v sqlq "TRUNCATE TABLE cache"
    #   register: out
    #   tags: [cache]
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot

    # - debug: var=out.stdout_lines
    #   tags: [cache]

    # - name: TRUNCATE TABLE cache_form
    #   command: ./../vendor/drush/drush/drush -v sqlq "TRUNCATE TABLE cache_form"
    #   register: out
    #   tags: [cache]
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot

    # - debug: var=out.stdout_lines
    #   tags: [cache]

    # - name: TRUNCATE TABLE ctools_object_cache
    #   command: ./../vendor/drush/drush/drush -v sqlq "TRUNCATE TABLE ctools_object_cache"
    #   register: out
    #   tags: [cache]
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot

    # - debug: var=out.stdout_lines
    #   tags: [cache]

    # - name: Make .drush writable
    #   file:
    #     path: /home/vagrant/.drush
    #     state: directory
    #     recurse: yes
    #     owner: vagrant
    #     group: vagrant
    #     mode: 'o+w'
    #   tags: [rr_dl,drush_permi]
    #   register: out

    # - debug: var=out.stdout_lines
    #   tags: rr_dl
    #   tags: [rr_dl,drush_permi]

    # - name: Check that the registry_rebuild exists
    #   stat:
    #     path: /home/vagrant/.drush/registry_rebuild
    #   register: registry_rebuild_exists
    #   tags: rr_dl

    # - name: Download registry rebuild
    #   command: ./../vendor/drush/drush/drush dl registry_rebuild --destination=/home/vagrant/.drush -y
    #   register: out
    #   tags: rr_dl
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   when: registry_rebuild_exists.stat.exists == False

    # - debug: var=out.stdout_lines
    #   tags: rr_dl

    # - name: Create project folder in vagrant user.
    #   file:
    #     path: /home/vagrant/emnies
    #     state: directory
    #   register: out
    #   tags: mkdir

    # - debug: var=out.stdout_lines
    #   tags: mkdir

    # - name: Create project tmp folder in vagrant user.
    #   file:
    #     path: /home/vagrant/emnies/tmp
    #     state: directory
    #   register: out
    #   tags: mkdir

    # - debug: var=out.stdout_lines
    #   tags: mkdir

    # - name: Allow all to write in emnies
    #   command: chmod a+w -R /home/vagrant/emnies
    #   register: out
    #   tags: chmod

    # - debug: var=out.stdout_lines
    #   tags: chmod

    # - name: Set preprocess_js to disagregate js
    #   command: ./../vendor/drush/drush/drush vset preprocess_js 0 --yes
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Set preprocess_css to disagregate css
    #   command: ./../vendor/drush/drush/drush vset preprocess_css 0 --yes
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Set default file path
    #   command: ./../vendor/drush/drush/drush vset file_public_path "sites/default/files"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Set file private path
    #   command: ./../vendor/drush/drush/drush vset file_private_path "/home/vagrant/emnies"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Change tmp default directory
    #   command: ./../vendor/drush/drush/drush vset file_temporary_path "/home/vagrant/emnies/tmp"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Set file schema
    #   command: ./../vendor/drush/drush/drush vset file_default_scheme "private"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Set irma api host
    #   command: ./../vendor/drush/drush/drush vset irma_api_ami_settings_host ""
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Clear cache of drush
    #   command: ./../vendor/drush/drush/drush cache-clear drush
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: rr

    # - debug: var=out.stdout_lines
    #   tags: rr

    # - name: Disable irma_log
    #   become: no
    #   shell: "./../bin/drush -y dis irma_log"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: dis_irma_log

    # - debug: var=out.stdout_lines
    #   tags: dis_irma_log

    # - name: Revert features
    #   shell: "./../vendor/drush/drush/drush fra -y"
    #   register: out
    #   ignore_errors: true
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: fra

    # - debug: var=out.stdout_lines
    #   tags: fra

    # - name: Update database
    #   shell: "./../bin/drush updatedb --yes -v"
    #   ignore_errors: true
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: updb

    # - debug: var=out.stdout_lines
    #   tags: updb

    # - name: Revert features
    #   shell: "./../vendor/drush/drush/drush fra -y"
    #   register: out
    #   ignore_errors: true
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: fra

    # - debug: var=out.stdout_lines
    #   tags: fra

    # - name: Enable search API
    #   become: yes
    #   command: ./../vendor/drush/drush/drush -y en search_api
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: rr

    # - debug: var=out.stdout_lines
    #   tags: rr

    # - name: Drush cache-clear drush
    #   command: ./../vendor/drush/drush/drush cache-clear drush
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: rr

    # - debug: var=out.stdout_lines
    #   tags: rr

    # - name: Copy solr settings into collection conf folder.
    #   shell: cp -ar /var/www/html/emnies-dev/docroot/sites/all/modules/contrib/search_api_solr/solr-conf/7.x/*.* /var/solr/data/collection1/conf
    #   register: out
    #   args:
    #     chdir: /vagrant_data/solr
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    # - name: Run registry rebuild
    #   become: no
    #   shell: "./../bin/drush rr"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: rr

    # - debug: var=out.stdout_lines
    #   tags: rr

    # - name: Clear cache all
    #   become: no
    #   shell: "./../vendor/drush/drush/drush cc all"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: cc_all

    # - debug: var=out.stdout_lines
    #   tags: cc_all

    # # @TODO: consider running cron before cc all:

    # - name: Enable email reroute
    #   shell: "./../bin/drush en reroute_email -y"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: reroute_email_en

    # - debug: var=out.stdout_lines
    #   tags: reroute_email_en

    # - name: Enable search krumo
    #   shell: "./../bin/drush en search_krumo -y"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: search_krumo_en

    # - debug: var=out.stdout_lines
    #   tags: search_krumo_en

    # - name: Enable flog
    #   shell: "./../bin/drush en flog -y"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: flog_en

    # - debug: var=out.stdout_lines
    #   tags: flog_en

    # - name: Set flog enabled
    #   command: ./../vendor/drush/drush/drush vset flog_enabled 1
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Set flog path
    #   command: ./../vendor/drush/drush/drush vset flog_path "/vagrant_data"
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Run sapi-c
    #   command: ./../bin/drush -v sapi-c solr_user_index
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    # - name: Run sapi-r
    #   shell: "./../vendor/drush/drush/drush -v sapi-r solr_user_index"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    # - name: Index users
    #   shell: "./../vendor/drush/drush/drush -v php-eval 'print search_api_index_items(search_api_index_load(solr_user_index));'"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: index_users

    # - debug: var=out.stdout_lines
    #   tags: index_users

    # - name: Run sapi-c
    #   shell: "./../vendor/drush/drush/drush -y en search_api; ./../vendor/drush/drush/drush -v sapi-c node_index"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    # - name: Run sapi-r
    #   shell: "./../vendor/drush/drush/drush -v sapi-r node_index"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    # - name: Index nodes
    #   shell: "./../vendor/drush/drush/drush -v php-eval 'print search_api_index_items(search_api_index_load(node_index));'"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/emnies-dev/docroot
    #   tags: index_users

    # - debug: var=out.stdout_lines
    #   tags: index_users

# @TODO: set drush user-password one_agency_admin --password="jUn7q3aUPmH2gQfBEcddeLQNJd48FWaK"
# @TODO: make sure to have run: sudo apt-get install -y php-dev
# it is needed for xdebug
# For running drush cc all faster:
#  drush vset features_rebuild_on_flush FALSE
#  drush vset entity_rebuild_on_flush FALSE
# @TODO: add patch on token 1.7 for php7: 
# https://www.drupal.org/files/issues/token-fix-cannot-use-string-offset-as-array_0.patch


# Create build.develop.props:
# Subsite configuration.
#  # ----------------------
#  project.url.base = https://localhost:8181/cim-dev/build
# # Database connection settings.
# # -----------------------------
# db.name = cim
# db.user = root
# db.password = root 
# db.host = localhost
# # Database download settings.
# # ---------------------------
# db.dl.username = 
# db.dl.password = 

# toolkit/phing build-platform build-subsite-dev install-clone and check everything is in place