#################################################
# Gest configurations
#################################################
---
- hosts: tpp
  become: yes
  vars_files:
    - group_vars/baremetal_hosts

  tasks:
    - name: Install unzip - it will be used by drush make
      become: true
      apt:
        name: unzip
        update_cache: yes
        state: present
      tags: build
      register: out

    - debug: var=out.stdout_lines
      tags: [unzip]

    - name: Install unzip default-jre
      become: true
      apt:
        name: default-jre
        update_cache: yes
        state: present
      tags: build
      register: out

    - debug: var=out.stdout_lines
      tags: [java]

    - name: Set APCu
      become: true
      apt:
        name: php7.4-apcu
        update_cache: yes
        state: present
      tags: [apt_apcu]
      register: out
    
    - debug: var=out.stdout_lines
      tags: [apt_apcu]

    - name: Set mbstring
      become: true
      apt:
        name: php7.4-mbstring
        update_cache: yes
        state: present
      tags: [apt_mbstring]
      register: out

    - debug: var=out.stdout_lines
      tags: [apt_apcu]

    - name: Set php json
      become: true
      apt:
        name: php7.4-json
        update_cache: yes
        state: present
      tags: [apt_mbstring]
      register: out

    - debug: var=out.stdout_lines
      tags: [apt_phpjson]

    - name: Set imap
      become: true
      apt:
        name: php7.4-imap
        update_cache: yes
        state: present
      tags: [apt_imap]
      register: out

    - debug: var=out.stdout_lines
      tags: [apt_phpjson]

# Set swp file:
# Reference: https://bogdancornianu.com/change-swap-size-in-ubuntu/
# sudo swapoff -a
## For 8 GB:
# sudo dd if=/dev/zero of=/swapfile bs=1G count=8
# sudo chmod 600 /swapfile
# sudo mkswap /swapfile
# sudo swapon /swapfile
## Edit /etc/fstab and add the new swapfile if it isnâ€™t already there
# /swapfile none swap sw 0 0
## Check result:
# grep SwapTotal /proc/meminfo

  pre_tasks:
    - name: Copy proxy settings
      shell: cp -ar /vagrant_data/assets/environment /etc/
      become: true      
      register: out
      args:
        chdir: /
      tags: sapi

    - debug: var=out.stdout_lines
      tags: proxy

    - name: Update apt cache.
      apt: update_cache=yes cache_valid_time=86400

    - name: APT Update
      shell: "apt-get update -y"
      become: true
      register: out

    - debug: var=out.stdout_lines

    - name: APT Update
      shell: "apt-get update -y"
      become: true
      register: out

    - debug: var=out.stdout_lines

    - name: APT Update
      shell: "apt-get update -y"
      become: true
      register: out

    - debug: var=out.stdout_lines

    - name: APT install php-dev
      shell: "apt-get install -y php-dev"
      become: true
      register: out

    - debug: var=out.stdout_lines

    - name: APT install composer
      shell: "apt install -y composer"
      become: true
      register: out

    - debug: var=out.stdout_lines

  roles:
    - { role: geerlingguy.apache }
    - { role: geerlingguy.php, tags: [ 'php' ] }
    - { role: geerlingguy.mysql, tags: [ 'mysql' ] }
    - { role: geerlingguy.php-mysql, tags: [ 'php-mysql' ] }
    - { role: geerlingguy.adminer, tags: [ 'adminer' ] }
    - { role: geerlingguy.java }
    - { role: geerlingguy.solr }
    - { role: geerlingguy.composer }
    - { role: geerlingguy.drush }
    - { role: geerlingguy.htpasswd, tags: [ 'htpasswd' ]}
    - { role: geerlingguy.php-xdebug }

# @TODO: add zend_extension=/usr/lib/php/20170718/xdebug.so
# to /etc/php/7.2/apache2/php.ini
# Also add to /etc/php/7.2/apache2/php.ini
# [XDebug]
# xdebug.remote_enable = 1
# xdebug.remote_autostart = 1

  post_tasks:

    - name: Add www-data user to vagrant group
      command: usermod -a -G vagrant www-data
      register: out

    - debug: var=out.stdout_lines

    - name: Restart apache for enabling MySQL
      command: apache2ctl restart
      register: out

    - debug: var=out.stdout_lines

    # @TODO: add Directoy at default host for clean URL:
    # <Directory /var/www/html>
    # Options Indexes FollowSymLinks MultiViews
    # AllowOverride All
    #   Require all granted
    #   Options Indexes FollowSymLinks MultiViews
    #   AllowOverride All
    #   AuthType Basic
    #   AuthName "Apache with basic auth."
    #   AuthUserFile /etc/apache-passwdfile
    #   Require valid-user
    # </Directory>
    # /etc/apache2/sites-enabled/000-default.conf
    # @TODO: set http password using:
    # https://github.com/geerlingguy/ansible-role-htpasswd


    # # @todo: add as a pre task, to be run in the host
    # - name: ssh-keygen
    #   shell: ssh-keygen -f /home/{{ baremetal_host_username }}/.ssh/known_hosts -R [127.0.0.1]:2222
    #   register: out
    #   tags: host_authoized_key_purge

    # - debug: var=out.stdout_lines
    #   tags: host_authoized_key_purge
