#################################################
# Project tpp
#################################################
---
- hosts: tpp
  become: yes
  vars_files:
    - group_vars/baremetal_hosts

  tasks:
    # # @todo: copy project root into /var/www/html instead of 
    # # creating a symbolic link. This will allow composer install 
    # # to be run inside the host, without getting into the 
    # # "can not remove vendor folder" error. Then use the ssh mount
    # # for development:
    # - name: Create a symbolic link for root folder
    #   file:
    #     src: /vagrant_data/just-tpdt-dev
    #     dest: /var/www/html/just-tpdt-dev
    #     owner: vagrant
    #     group: vagrant
    #     state: link
    #   tags: apache_link
    #   register: out

    # - debug: var=out.stdout_lines
    #   tags: [apache_link]

    # set the group for www-data

    # @todo: run the composer install in the host machine, or git clone the project inside the guest
    # or change the path in the host and in the guest in order to put the cloned repository in the
    # root of the filesystem. this will avoid the paths being incompatible

    # - name: Composer install.
    #   become: no
    #   shell: "yes | composer install"
    #   ignore_errors: true
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Create a symbolic link build.develop.props
    #   file:
    #     src: /vagrant_data/assets/tpp/build.develop.props
    #     dest: /var/www/html/just-tpdt-dev/build.develop.props
    #     state: link
    #   tags: build

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Phing build-platform.
    #   shell: "./toolkit/phing build-platform"
    #   ignore_errors: true
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Phing build-subsite-dev.
    #   shell: "./toolkit/phing build-subsite-dev"
    #   ignore_errors: true
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Install clean for generating settings.
    #   shell: "./toolkit/phing install-clean"
    #   ignore_errors: true
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Delete database with name 'tpdt'
    #   mysql_db:
    #     name: tpdt
    #     state: absent
    #   register: out
    #   tags: [db]

    # - debug: var=out.stdout_lines
    #   tags: [db]

    # - name: Create database with name 'tpdt'
    #   mysql_db:
    #     name: tpdt
    #     collation: utf8mb4_unicode_ci
    #     state: present
    #   register: out
    #   tags: [db]

    # - debug: var=out.stdout_lines
    #   tags: [db]

    # # wget does not work. Try using curl, uncompress and place the .sql inside /home/devlin/baremetal/ansible/vagrant/data/assets
    # # this will be available inside the guest machine at /vagrant_data/assets/
    # just-tpdt-reference_202205302241-sanitized.sql.gz
    # - name: Download database.
    #   shell: "wget https://user:pass@asda.domain/domain/project/dumps/project_date-sanitized.sql.gz"
    #   ignore_errors: true
    #   register: out
    #   tags: build
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev

    # - debug: var=out.stdout_lines
    #   tags: build

    # - name: Import database, similar to mysql -u <username> -p <database> < database.sql
    #   mysql_db:
    #     state: import
    #     name: tpdt
    #     target: /vagrant_data/assets/tpp/just-tpdt-reference_202206162243-sanitized.sql
    #   register: out
    #   tags: [db]

    # - debug: var=out.stdout_lines
    #   tags: [db]

    # # sudo chmod a+w -R sites/default/files
    # # sudo chgrp -R www-data sites/default/files
    # # sudo chmod a+w -R sites/default/tmp
    # # sudo chgrp -R www-data sites/default/tmp

    # - name: Download register-rebuild
    #   become: no
    #   shell: "./../toolkit/drush dl registry_rebuild"
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: rr

    # - debug: var=out.stdout_lines
    #   tags: rr

    # - name: Run cache-clear drush
    #   become: no
    #   shell: "./../toolkit/drush cache-clear drush"
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: rr

    # - debug: var=out.stdout_lines
    #   tags: rr

    # - name: Run registry rebuild
    #   become: no
    #   shell: "./../toolkit/drush rr"
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: rr

    # - debug: var=out.stdout_lines
    #   tags: rr

    # - name: TRUNCATE TABLE cache
    #   command: ./../toolkit/drush -v sqlq "TRUNCATE TABLE cache"
    #   register: out
    #   tags: [cache]
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build

    # - debug: var=out.stdout_lines
    #   tags: [cache]

    # - name: TRUNCATE TABLE cache_form
    #   command: ./../toolkit/drush -v sqlq "TRUNCATE TABLE cache_form"
    #   register: out
    #   tags: [cache]
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build

    # - debug: var=out.stdout_lines
    #   tags: [cache]

    # - name: TRUNCATE TABLE ctools_object_cache
    #   command: ./../toolkit/drush -v sqlq "TRUNCATE TABLE ctools_object_cache"
    #   register: out
    #   tags: [cache]
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build

    # - debug: var=out.stdout_lines
    #   tags: [cache]

    # - name: Revert features
    #   shell: "./../toolkit/drush fra -y"
    #   register: out
    #   ignore_errors: true
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: fra

    # - debug: var=out.stdout_lines
    #   tags: fra

    # - name: Update database
    #   shell: "./../toolkit/drush updatedb --yes -v"
    #   ignore_errors: true
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: updb

    # - debug: var=out.stdout_lines
    #   tags: updb

    # - name: Drush cache-clear drush
    #   command: ./../toolkit/drush cache-clear drush
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: rr

    # - debug: var=out.stdout_lines
    #   tags: rr

    # - name: Copy solr settings into collection conf folder.
    #   shell: cp -ar /var/www/html/just-tpdt-dev/build/sites/all/modules/contrib/search_api_solr/solr-conf/7.x/*.* /var/solr/data/collection1/conf
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    # - name: Run registry rebuild
    #   become: no
    #   shell: "./../toolkit/drush rr"
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: rr

    # - debug: var=out.stdout_lines
    #   tags: rr

    # - name: Clear cache all
    #   become: no
    #   shell: "./../toolkit/drush cc all"
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: cc_all

    # - debug: var=out.stdout_lines
    #   tags: cc_all

    # - name: Run sapi-c
    #   command: ./../toolkit/drush -v sapi-c solr_user_index
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    # - name: Run sapi-r
    #   shell: "./../toolkit/drush -v sapi-r solr_user_index"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    ## ./../toolkit/drush -y pm-disable search_api_db search_api_facetapi search_api_solr search_api_views panopoly_search oa_search search_api_attachments search_api_solr_overrides irma_search irma_core search_api search_api_solr tpp_core tpp_user
    ## ./../toolkit/drush -y pmu search_api_db search_api_facetapi search_api_solr search_api_views panopoly_search oa_search search_api_attachments search_api_solr_overrides irma_search irma_core search_api search_api_solr tpp_core tpp_user
    ## 7 times:
    ## ./../toolkit/drush -y en search_api_db search_api_facetapi search_api_solr search_api_views panopoly_search oa_search search_api_attachments search_api_solr_overrides irma_search irma_core search_api search_api_solr tpp_core tpp_user

    # - name: Index users
    #   shell: "./../toolkit/drush -v php-eval 'print search_api_index_items(search_api_index_load(solr_user_index));'"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: index_users

    # - debug: var=out.stdout_lines
    #   tags: index_users

    # - name: Run sapi-c
    #   shell: "./../toolkit/drush -y en search_api; ./../toolkit/drush -v sapi-c node_index"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    # - name: Run sapi-r
    #   shell: "./../toolkit/drush -v sapi-r node_index"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: sapi

    # - debug: var=out.stdout_lines
    #   tags: sapi

    # - name: Index nodes
    #   shell: "./../toolkit/drush -v php-eval 'print search_api_index_items(search_api_index_load(node_index));'"
    #   become: no
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: index_users

    # # - debug: var=out.stdout_lines
    # #   tags: index_users

    # - name: Enable email reroute
    #   shell: "./../toolkit/drush en reroute_email -y"
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: reroute_email_en

    # - debug: var=out.stdout_lines
    #   tags: reroute_email_en

    # - name: Enable search krumo
    #   shell: "./../toolkit/drush en search_krumo -y"
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: search_krumo_en

    # - debug: var=out.stdout_lines
    #   tags: search_krumo_en

    # - name: Enable flog
    #   shell: "./../toolkit/drush en flog -y"
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: flog_en

    # - debug: var=out.stdout_lines
    #   tags: flog_en

    # - name: Set flog enabled
    #   command: ./../toolkit/drush vset flog_enabled 1
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

    # - name: Set flog path
    #   command: ./../toolkit/drush vset flog_path "/vagrant_data"
    #   register: out
    #   args:
    #     chdir: /var/www/html/just-tpdt-dev/build
    #   tags: vset

    # - debug: var=out.stdout_lines
    #   tags: vset

# @TODO: set drush user-password one_agency_admin --password="bla"
# it is needed for xdebug
# For running drush cc all faster:
#  drush vset features_rebuild_on_flush FALSE
#  drush vset entity_rebuild_on_flush FALSE
# @TODO: add patch on token 1.7 for php7: 
# https://www.drupal.org/files/issues/token-fix-cannot-use-string-offset-as-array_0.patch

# New way:
# vagrant@ubuntu-focal:/vagrant_data/tpd-dev$ composer update
# vagrant@ubuntu-focal:/vagrant_data/tpd-dev$ composer install
# vagrant@ubuntu-focal:/vagrant_data/tpd-dev$ ./toolkit/phing build-platform
# vagrant@ubuntu-focal:/vagrant_data/tpd-dev$ ./toolkit/phing build-subsite-dev

# solr host: 127.0.0.1 
# Solr port: 8983
# Solr path: /solr/collection1
